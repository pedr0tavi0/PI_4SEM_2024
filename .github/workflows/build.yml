name: Jobs CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      working-directory: CODIFICAÇÃO
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for MySQL to be ready
      run: |
        until docker inspect --format '{{.State.Health.Status}}' ${{ job.services.mysql.id }} | grep -q "healthy"; do
          echo 'waiting for mysql to be connectable...'
          sleep 5
        done

    - name: Start Flask application
      working-directory: CODIFICAÇÃO
      env:
        CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
        DATABASE_URL: mysql+pymysql://root:root@127.0.0.1:3306/testdb
      run: |
        nohup python run.py &

    - name: Wait for Flask to be ready
      run: |
        echo "Waiting for Flask to start..."
        sleep 10

    # - name: Run tests and measure coverage
    #   run: |
    #     coverage run -m pytest
    #     coverage report

    - name: Test Flask application
      run: |
        curl --fail http://127.0.0.1:5000 || (echo "Flask application did not start correctly" && exit 1)

    - name: Run Flask for a specific time
      run: |
        echo "Running Flask application for 10 seconds..."
        sleep 10

    - name: Stop Flask application
      run: |
        echo "Stopping Flask application..."
        pkill -f run.py

    - name: Additional steps
      run: echo "Continue with the next steps..."
